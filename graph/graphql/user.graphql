directive @auth on FIELD_DEFINITION

enum Type {
  Client
  Driver
}

scalar Time

type UserMetaData {
  id: ID!
  phoneNumber: String!
  dateOfBirth: Time!
  createdDate: Time!
}

type Location {
  lat: Float!
  long: Float!
}

type PaymentHistory {
  id: ID!
  amountCents: Int!
  paymentMethod: String!
  createdAt: Time!
}

type RideHistory {
  id: ID!
  source: Location!
  destination: Location!
  payment: PaymentHistory!
  driver: Driver!
  user: UserMetaData!
  boardTime: Time!
  arrivalTime: Time
  status:String
}

type Session {
  user: UserMetaData
  isSignupComplete: Boolean!
}


enum CarType{luxury,family}

type CarLocation{
    location: Location!
    driver: Driver!
    carType: CarType!
}

input CreateUserData {
  phoneNumber: String!
  dateOfBirth: Time!
  firebaseAuthId: String!
}

input UserLocation{
    lat: Float!
    lng: Float!
}

type Subscription{
    driverLocations(location: UserLocation): [CarLocation!]!
}

type Mutation {
  createUser(data: CreateUserData!): UserMetaData!
  createSession(tokenId: String!): Session!
}

type Query {
  userMetaData(id: ID!): UserMetaData! @auth()
}
